import{_ as i}from"./DataBaseBOC-2df5315e.js";import{_ as c,r as n,o as d,c as r,a as t,d as e,e as o,b as _,f as s}from"./app-cb719924.js";const l={},h=_('<h1 id="database-boc" tabindex="-1"><a class="header-anchor" href="#database-boc" aria-hidden="true">#</a> DataBase BOC</h1><p>Select, Insert, Delete 등 데이터베이스와 관련된 구성요소입니다. <br><img class="boxBorder" src="'+i+'" style="width:400px;"> <br></p><h2 id="_1-sel" tabindex="-1"><a class="header-anchor" href="#_1-sel" aria-hidden="true">#</a> 1. SEL</h2><p>DB 테이블에 대한 Select문을 처리하는 기능인 컴포넌트입니다.</p>',4),p={class:"custom-container tip"},m={class:"custom-container-title"},u=e("p",null,"SEL BOC는 Toad 등의 Query Tool에서 미리 작성된 SQL 쿼리를 복사해서 입력하는 방식으로 사용합니다.",-1),b=e("h2",{id:"_2-ins",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-ins","aria-hidden":"true"},"#"),s(" 2. INS")],-1),B=e("p",null,"DB 테이블에 대한 Insert문을 처리하는 기능인 컴포넌트입니다.",-1),x={class:"custom-container tip"},D={class:"custom-container-title"},R=e("p",null,"INS BOC는 쿼리를 자동 생성하며 자동 생성에 필요한 속성을 설정합니다.",-1),k=e("h2",{id:"_3-del",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-del","aria-hidden":"true"},"#"),s(" 3. DEL")],-1),v=e("p",null,"DB 테이블에 대한 Delete문을 처리하는 기능인 컴포넌트입니다.",-1),C={class:"custom-container tip"},f={class:"custom-container-title"},O=e("p",null,[s("DEL BOC는 쿼리를 자동 생성하며 자동 생성에 필요한 속성을 설정합니다. "),e("br"),s(" 처리 이후 Object 컬럼인 UPDCNT 값으로 삭제 처리한 Record Count를 Return 처리합니다.")],-1),S=e("h2",{id:"_4-upd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-upd","aria-hidden":"true"},"#"),s(" 4. UPD")],-1),I=e("p",null,"DB 테이블에 대한 Update 처리를 수행하는 기능인 컴포넌트입니다.",-1),N={class:"custom-container tip"},U={class:"custom-container-title"},y=e("p",null,"UPD BOC는 쿼리를 자동 생성하며 자동 생성에 필요한 속성을 설정합니다.",-1),E=e("h2",{id:"_5-uni",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-uni","aria-hidden":"true"},"#"),s(" 5. UNI")],-1),L=e("p",null,"DB 테이블에 대한 Update & Insert 처리를 수행하는 기능인 컴포넌트입니다.",-1),P={class:"custom-container tip"},T={class:"custom-container-title"},g=e("p",null,[s("UNI BOC는 쿼리를 자동 생성하며 자동 생성에 필요한 속성을 설정합니다. "),e("br"),s(" 처리 방식은 Update 먼저 수행하고 수행결과가 0건이면 Insert를 처리합니다. 즉 UPD BOC, INS BOC를 결합 시킨 형태입니다.")],-1),V=e("h2",{id:"_6-xiud",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_6-xiud","aria-hidden":"true"},"#"),s(" 6. XIUD")],-1),j=e("p",null,"표준적인 SQL문장이 아닌 비정형적 SQL문장에 대한 처리를 수행하는 기능인 컴포넌트입니다.",-1),Q={class:"custom-container tip"},K={class:"custom-container-title"},A=e("p",null,[s("INS BOC, UPD BOC, DEL BOC는 속성 설정으로 쿼리를 자동 생성처리 하지만 XIUD BOC는 사용자가 직접 쿼리를 입력하여 사용하는 기능입니다."),e("br"),s(" 예를 들면, PK를 수정하는 Update문이나 Insert문, Select문, Merge Into문 등을 사용자가 직접 입력하여 사용할 수 있습니다.")],-1),M=e("h2",{id:"_7-set",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-set","aria-hidden":"true"},"#"),s(" 7. SET")],-1),X=e("p",null,"입력 Object의 레코드들을 대상으로 Select 조건을 생성하여 필요한 Element를 덧붙이는 컴포넌트입니다.",-1),w={class:"custom-container tip"},q={class:"custom-container-title"},z=e("p",null,"입력 Object의 레코드의 특정 컬럼을 조건 값으로 하여 입력 레코드 수만큼 Select문이 실행됩니다.",-1),F=e("p",null,[e("span",{class:"spanEx"}," Ex) 입력된 Dataset Object Column에 부서코드가 없다면, 해당 데이터셋에 사원의 부서코드를 조회하여 데이터셋에 DEPARTMENTID를 ADD할 수 있는 기능을 제공합니다. ")],-1),G=e("h2",{id:"_8-rbk",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_8-rbk","aria-hidden":"true"},"#"),s(" 8. RBK")],-1),H=e("p",null,"연결된 데이터베이스에 Rollback Command를 실행하는 컴포넌트입니다.",-1),J={class:"custom-container tip"},W={class:"custom-container-title"},Y=e("p",null,"RBK BOC는 쿼리를 자동 생성하며 자동 생성에 필요한 속성을 설정합니다.",-1);function Z($,ee){const a=n("Badge");return d(),r("div",null,[h,t(" Remark "),e("div",p,[e("p",m,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),u]),t(" "),b,B,t(" Remark "),e("div",x,[e("p",D,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),R]),t(" "),k,v,t(" Remark "),e("div",C,[e("p",f,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),O]),t(" "),S,I,t(" Remark "),e("div",N,[e("p",U,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),y]),t(" "),E,L,t(" Remark "),e("div",P,[e("p",T,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),g]),t(" "),V,j,t(" Remark "),e("div",Q,[e("p",K,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),A]),t(" "),M,X,t(" Remark "),e("div",w,[e("p",q,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),z,F]),t(" "),G,H,t(" Remark "),e("div",J,[e("p",W,[o(a,{type:"tip",text:"Remark",vertical:"middle"})]),Y]),t(" ")])}const ae=c(l,[["render",Z],["__file","DatabaseBoc.html.vue"]]);export{ae as default};
