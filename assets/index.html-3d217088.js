import{_ as e,o as t,c as o,b as r}from"./app-aedf0456.js";const s="/documentation/assets/QueryDeveloper-7f9df1f1.png",p="/documentation/assets/Structure-9e7e796c.png",n={},i=r('<h1 id="데이터베이스-쿼리-개발-도구" tabindex="-1"><a class="header-anchor" href="#데이터베이스-쿼리-개발-도구" aria-hidden="true">#</a> 데이터베이스 쿼리 개발 도구</h1><p><b style="font-size:20px;">1. Query Developer</b><br> Query Developer는 Service Model에서 사용되는 SQL 쿼리를 개발하고 테스트하는 도구입니다.<br> 프로그램 개발 시 필요한 Database 조작 언어를 관리 및 실행 가능하고 업무 DB 관련 테이블 생성, 변경, 테이블 구조 확인 및 쿼리를 위한 편의 기능을 제공하며, 특히, 테이블을 선택하면 기본적인 SQL문과 컬럼 등을 자동으로 구성해서 표시하므로 쿼리작성이 용이할뿐만 아니라 Model Designer에서 모델 작성에 필요한 속성 설정시 편리하게 사용할 수 있습니다.<br> 또한, Query 이력 및 유사 쿼리 검색 기능을 제공하여 쿼리 작성 시간을 단축 등 개발에 필요한 필수적인 기능을 제공하여 개발자의 작업 속도를 향상시키며, 사용자에게 인가된 데이터에만 접근이 가능하도록 데이터 보안 및 통제 기능을 제공하여 효율적인 데이터관리를 실현합니다. <img src="'+s+'" style="position:relative;top:5px;"> <br></p><p><b style="font-size:20px;">2. 화면 구성</b><br> Query Developer 작업 화면은 총 6개 layout으로 구성되어 있다. <img src="'+p+'" style="position:relative;top:5px;"> <br><b style="font-size:20px;">1) 도구상자</b><br> Query Developer에서 사용하는 도구상자로 쿼리 실행 및 조작이 가능하다.</p><p><b style="font-size:20px;">2) DB접속 및 테이블 리스트 영역</b><br> DB서버 연결 및 테이블 리스트를 Table 형식으로 표현한 영역이다.</p><p><b style="font-size:20px;">3) 쿼리 작업 영역</b><br> 실행시킬 쿼리를 작성할 수 있는 창이다. 연결한 DB에 따라 쿼리를 작성하여 실행할 수 있다.</p><p><b style="font-size:20px;">4) 단축키</b><br> 자주 사용하는 쿼리나 키워드를 Alt+Key (숫자 1~9, 영문키 D~Z )를 눌러 단축키로 저장하고 해당 Key에 저장된 그리드 버튼을 클릭해 간편하게 사용할 수 있는 기능이다.</p><p><b style="font-size:20px;">5) 메시지 영역</b><br> 실행된 쿼리 질의에 대한 결과를 보여준다.</p><p><b style="font-size:20px;">6) 개발 작업 Tool</b><br> Application Layer별로 개발을 위한 작업 Tab Control이다.</p>',8),l=[i];function a(b,c){return t(),o("div",null,l)}const _=e(n,[["render",a],["__file","index.html.vue"]]);export{_ as default};
