import{_ as o}from"./ChangeBOC-0ad7df31.js";import{_ as i,r as n,o as d,c as r,a as t,d as e,e as c,b as _,f as s}from"./app-9a22aa7a.js";const l={},h=_('<h1 id="chanage-boc" tabindex="-1"><a class="header-anchor" href="#chanage-boc" aria-hidden="true">#</a> Chanage BOC</h1><p>데이터셋 Object의 레코드에 변화를 주는 구성요소입니다. <br><img class="boxBorder" src="'+o+'" style="width:400px;"> <br></p><h2 id="_1-glv" tabindex="-1"><a class="header-anchor" href="#_1-glv" aria-hidden="true">#</a> 1. GLV</h2><p>단일 값을 해당 서비스 내에서 변수로 사용하는 컴포넌트입니다.</p>',4),p={class:"custom-container tip"},m={class:"custom-container-title"},u=e("p",null,"GLV BOC 이외의 BOC는 In-Out에 기초하여 데이터셋을 구성하나 GLV BOC는 단순히 서비스 내부에서 변수형식으로 선언하여 사용합니다.",-1),b=e("h2",{id:"_2-cvt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-cvt","aria-hidden":"true"},"#"),s(" 2. CVT")],-1),x=e("p",null,"추가 및 변환 처리된 데이터를 데이터셋 Object로 생성하는 컴포넌트입니다.",-1),C={class:"custom-container tip"},v={class:"custom-container-title"},B=e("p",null,[s("CVT BOC는 입력 데이터셋 Object에 대한 데이터를 가공하여 출력되도록 사용합니다."),e("br"),s(" 이외에 추가적으로 입력 데이터셋 레코드에 대한 필터기능이 있습니다.")],-1),O=e("h2",{id:"_3-get",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-get","aria-hidden":"true"},"#"),s(" 3. GET")],-1),R=e("p",null,"화면에서 입력되는 데이터셋에서 필터링 처리를 수행하여 새로운 결과집합을 생성하는 컴포넌트입니다.",-1),f={class:"custom-container tip"},D={class:"custom-container-title"},k=e("p",null,"Select문의 Where 조건문과 동일한 역할을 수행합니다.",-1),g=e("h2",{id:"_4-mrg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-mrg","aria-hidden":"true"},"#"),s(" 4. MRG")],-1),y=e("p",null,"n개의 데이터셋 Object의 레코드를 추출하여 병합된 단일 데이터셋을 생성하는 컴포넌트입니다.",-1),V={class:"custom-container tip"},j={class:"custom-container-title"},E=e("p",null,"일반적으로 최종 결과 데이터셋을 생성하기 위하여 자주 사용됩니다.",-1),S=e("h2",{id:"_5-add",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-add","aria-hidden":"true"},"#"),s(" 5. ADD")],-1),T=e("p",null,"지정된 조건에 따라 레코드 Add해두는 컴포넌트입니다.",-1),A={class:"custom-container tip"},I={class:"custom-container-title"},M=e("p",null,[s("Loop 내에서 발생하는 데이터 레코드를 보존해주는 기능입니다."),e("br"),s(" 반드시 MPD BOC, MIUD BOC의 Child 프로세스에서만 사용 가능합니다."),e("br"),s(" MPD BOC, MIUD BOC 내 즉 Loop내에서 사용되는 BOC는 메인 Flow에서 Access할 수 없으나 예외적으로 ADD BOC를 이용하면 메인 Flow의 BOC에서 Access가 가능합니다.")],-1),G=e("h2",{id:"_6-sum",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_6-sum","aria-hidden":"true"},"#"),s(" 6. SUM")],-1),L=e("p",null,"입력 데이터셋 Object에 대하여 구하는 컴포넌트입니다.",-1),N=e("h2",{id:"_7-srd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-srd","aria-hidden":"true"},"#"),s(" 7. SRD")],-1),P=e("p",null,"입력 Object의 레코드들을 대상으로 Select 조건을 생성하여 필요한 Element를 덧붙이는 컴포넌트입니다.",-1),w={class:"custom-container tip"},U={class:"custom-container-title"},F=e("p",null,[s("입력 Object의 레코드의 특정 컬럼을 조건 값으로 하여 입력 레코드 수만큼 Select문이 실행됩니다. "),e("br"),e("span",{class:"spanEx"}," Ex) 입력된 데이터셋 Object 컬럼에 DEPT_ID 컬럼이 없다면, 해당 데이터셋에 해당 DEPT_ID 컬럼을 조회하여 데이터셋에 DEPT_ID 컬럼을 ADD할 수 있는 기능을 제공합니다. ")],-1),K=e("h2",{id:"_8-srcd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_8-srcd","aria-hidden":"true"},"#"),s(" 8. SRCD")],-1),W=e("p",null,"연결된 데이터베이스에 Rollback Command를 실행하는 컴포넌트입니다.",-1),q={class:"custom-container tip"},z={class:"custom-container-title"},H=e("p",null,"RBK BOC는 쿼리를 자동 생성하며 자동 생성에 필요한 속성을 설정합니다.",-1);function J(Q,X){const a=n("Badge");return d(),r("div",null,[h,t(" Remark "),e("div",p,[e("p",m,[c(a,{type:"tip",text:"Remark",vertical:"middle"})]),u]),t(" "),b,x,t(" Remark "),e("div",C,[e("p",v,[c(a,{type:"tip",text:"Remark",vertical:"middle"})]),B]),t(" "),O,R,t(" Remark "),e("div",f,[e("p",D,[c(a,{type:"tip",text:"Remark",vertical:"middle"})]),k]),t(" "),g,y,t(" Remark "),e("div",V,[e("p",j,[c(a,{type:"tip",text:"Remark",vertical:"middle"})]),E]),t(" "),S,T,t(" Remark "),e("div",A,[e("p",I,[c(a,{type:"tip",text:"Remark",vertical:"middle"})]),M]),t(" "),G,L,N,P,t(" Remark "),e("div",w,[e("p",U,[c(a,{type:"tip",text:"Remark",vertical:"middle"})]),F]),t(" "),K,W,t(" Remark "),e("div",q,[e("p",z,[c(a,{type:"tip",text:"Remark",vertical:"middle"})]),H]),t(" ")])}const $=i(l,[["render",J],["__file","ChangeBoc.html.vue"]]);export{$ as default};
